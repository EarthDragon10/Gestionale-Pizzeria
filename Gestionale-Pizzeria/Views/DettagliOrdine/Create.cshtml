@model Gestionale_Pizzeria.Models.DettagliOrdine

@{
    ViewBag.Title = "Create";
}

<div class="d-flex">
    @{
        Html.RenderAction("PartialViewSingoloProdotto");
    }

    <hr />

    @using (Html.BeginForm())
    {

        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h3>DettagliOrdine</h3>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row d-flex align-items-center">
                <div class="form-group col">
                    <h4>Quantitá:</h4>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantita, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantita, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col">
                    <h4>Note per l'ordine:</h4>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nota, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nota, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col">
                    <div class="btn btn-success">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>

        </div>
    }
</div>
</div>

@*<h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>DettagliOrdine</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Quantita, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantita, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantita, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nota, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nota, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nota, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Importo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Importo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Importo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdProdotto, "IdProdotto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdProdotto", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdProdotto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
